<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on Scrivener</title><link>/techdoc/api/</link><description>Recent content in API on Scrivener</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/techdoc/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Four ways to make an API call in JS</title><link>/techdoc/api/4waysapi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/techdoc/api/4waysapi/</guid><description>There are many ways to make an API call in different programming languages. In JavaScript an API could be called in four ways:
XMLHttpRequest Fetch API Axios JQuery Use JSON Placeholder service to get API data. It has an endpoint with 10 users data.
How to present API data in a table If you need to present API in the table, create an index.html file with the code showed below.</description></item><item><title>Create an invite to sign for a merged document group</title><link>/techdoc/api/createinvite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/techdoc/api/createinvite/</guid><description>POST Copy https://api-eval.signnow.com/documentgroup/{{group_id}}/groupinvite Creates an invite to sign for a merged document group. group_id TBD. (ask developers about group id data type and how to find it)
Requirements (if any):
TBD. It is necessary to specify special requirements from the developers of the API. Request Headers Authorization string (Required)
Bearer followed by token
Default: Bearer {{token}}
Body Request example Content-Type: application/json
TBD. It is necessary to get from the API developers versions of the code in all languages (Python, C, JS (Fetch, jQuery, Axios, XMLHttpRequest) etc.</description></item><item><title>How to place API in a table</title><link>/techdoc/api/api_in_the_table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/techdoc/api/api_in_the_table/</guid><description>Create some boiler plates To present API data in a table online create three files in a folder:
index.html script.js style.css Then add bootstrap code to index.html to get the table fast. Open the Bootstrap service, click on the &amp;ldquo;Read the Docs&amp;rdquo; button and find CDN links paragraph on the page.
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;API data in table&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.</description></item><item><title>API terms</title><link>/techdoc/api/apiterms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/techdoc/api/apiterms/</guid><description>Resource URL: https://api.openweathermap.org/surfreport/{beachId}
Endpoint: /surfreport/{beachId}
Path parameter (it should be represented in curly braces): {beachId}
Parameters are options you can pass with the endpoint (such as specifying the response format or the amount returned) to influence the response. There are several types of parameters:
header parameters: are included in the request header, usually related to authorization. path parameters: are within the path of the endpoint, before the query string (?). These are usually set off within curly braces.</description></item></channel></rss>